Here's a list of things I want from this system. I will eventually merge this document with what I already have.

* Use DOI (or some other UID) as the bibTeX key.
* Have a database with entries containing bibliographic metadata. For each paper in the database, have a PDF of the paper.
* A way to easily pull the relevant subset out of a stack of papers.
* Add to the stack of physical papers every time I add a new entry ot the bibliographic database.

Here's a description of how I interact with the literature. I start by having some motivation to look over the literature. This motivation is because I want to write a proposal or do some research or because I'm on somebody's project (e.g. the TFAN). I then go through an iterative process: I begin with some kernel of a few papers. Either someone hands me a stack of papers to read or I go through google scholar, web of knowledge, amazon, etc. I read through the kernel and create a list of new references I want -- either because they are referenced in a paper/book (back refs.) or because a paper was interesting and I want to see who cited the apper (forward refs). I collect all these references and read through them, generating another "to get" list. I continue these iterations until I top out: I'm either trying to get references that I already have, or I get too far afield from my main motivation.

I figure I top out at around 50 to 100 papers. 

The refmanage system comes into play during this phase of scholarship.

The back-end phase of this process occurs when I am writing my own document: a paper, a report, a slide deck/presentation, a proposal, etc. In this case I usually get a sub-stack out of the 50 to 100 ref stack I amassed during the initial scholarship phase. Compiling that sub-stack is an issue in and of itself, which maybe I'll talk about later. I read the refs in the sub-stack in greater detail so that I can make claims and cite those claims in the body of my documents. At this point, it is critically important that I can unambiguously reference these refs -- a URI like a DOI or ISBN works perfectly here.

So this description captures the features of my scholarship workflow. I want software that facilitates and optimizes this process. Software and data organization.

For one, here is my stack: I use LaTeX for text. I write code in python. For slide decks and posters, I use scribus. I use qcad for 2D technical drawings. I use inkscape for vector graphics and I don't really have a raster graphics preference.

Some kind of bibliographic database is what I need. this database would contain entries where each entry corresponds to a single ref or part of a single ref -- e.g. book X p. 77 to 80. The entries should be unique; no duplicates. The entries should be sufficiently complete so that a bibliographic citation (Chicago, APS, etc.) can be automatically generated. The database should be machine independent and synchronous: If I add an entry using machine A, that addition should be reflected on machine B. Adding entries should be quick and easy. The database should contain PDFs (or some kind of representation) for each entry. The URI shoudl be clearly marked on the PDF. The database should be arbitrarily searchable -- best case scenario is also searching the document.

A lot of the functionality I just described exists in pinboard. I think I can get the rest using bibTeX, pybtex, pdftk, and python. There may be some specs I missed, but they are probably in the other document.

I also need to thingk about the requirements I have for my physical stack of papers as well as notes I write directly on the papers.

There is a trade-off between having everything on, say, bibsonomy or pinboard, and having it locally in the filesystem and managed by git.

There really are two issues: one, maintaining and adding items to a working system. Two, getting the ad-hoc stuff I currently have into a working system.

Here's a proposal to get the functionality I want. I will base this solution on bibsonomy. I'll consider what happens when I add a single paper.

Bibsonomy already has a bookmarklet button I can use. If I get the button directly from bibsonomy.org, it scrapes the page and populates the various bibliographic metadata items. At this point, I have a lot of the features I want: I get the bib. metadata. Bibsonomy is probably smart enough to handle duplicates. There is probably an easy way to dump the entire database to a bibtex file that I can use when I write papers. this database is machine independent: all the data is stored on the bibsonomy servers. Adding an entry is easy. I think the database is searchable.

What doesn't bibsonomy do? It won't automatically use the DOI (or URI) for the bibtex key. It won't download/import the PDF. It won't watermark the PDF w/ the URI.
